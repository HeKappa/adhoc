{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\critis1\\\\Desktop\\\\Projects\\\\ad_hoc\\\\adhoc_final\\\\frontend\\\\src\\\\contexts\\\\SocketContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// frontend/src/contexts/SocketContext.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport const useSocket = () => {\n  _s();\n  return useContext(SocketContext);\n};\n_s(useSocket, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const [socket, setSocket] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState({});\n  const [tradeRequests, setTradeRequests] = useState([]);\n  useEffect(() => {\n    const newSocket = io('http://localhost:5000', {\n      transports: ['websocket', 'polling']\n    });\n    setSocket(newSocket);\n    console.log('Socket.io client connected');\n    return () => newSocket.close();\n  }, []);\n  useEffect(() => {\n    if (!socket) return;\n    const username = localStorage.getItem('username');\n    if (username) {\n      socket.emit('userOnline', username);\n      console.log(`Emitted userOnline for: ${username}`);\n    }\n    socket.on('connect', () => {\n      console.log('Connected to Socket.io server');\n      if (username) {\n        socket.emit('userOnline', username);\n      }\n    });\n    socket.on('disconnect', () => {\n      console.log('Disconnected from Socket.io server');\n    });\n    socket.on('updateUserStatus', users => {\n      setOnlineUsers(users);\n      console.log('Received updateUserStatus:', users);\n    });\n    socket.on('receiveTradeRequest', data => {\n      setTradeRequests(prev => [...prev, data]);\n      console.log('Received trade request:', data);\n    });\n    socket.on('tradeAccepted', data => {\n      console.log('Trade accepted:', data);\n      // Optionally handle trade acceptance\n    });\n    return () => {\n      socket.off('updateUserStatus');\n      socket.off('receiveTradeRequest');\n      socket.off('tradeAccepted');\n    };\n  }, [socket]);\n  const value = {\n    socket,\n    onlineUsers,\n    tradeRequests,\n    setTradeRequests\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 12\n  }, this);\n};\n_s2(SocketProvider, \"GjWofJbRIOJWZXDW6gMy/2rqMM0=\");\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","jsxDEV","_jsxDEV","SocketContext","useSocket","_s","SocketProvider","children","_s2","socket","setSocket","onlineUsers","setOnlineUsers","tradeRequests","setTradeRequests","newSocket","transports","console","log","close","username","localStorage","getItem","emit","on","users","data","prev","off","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/critis1/Desktop/Projects/ad_hoc/adhoc_final/frontend/src/contexts/SocketContext.js"],"sourcesContent":["// frontend/src/contexts/SocketContext.js\r\nimport React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst SocketContext = createContext();\r\n\r\nexport const useSocket = () => {\r\n    return useContext(SocketContext);\r\n};\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n    const [socket, setSocket] = useState(null);\r\n    const [onlineUsers, setOnlineUsers] = useState({});\r\n    const [tradeRequests, setTradeRequests] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const newSocket = io('http://localhost:5000', {\r\n            transports: ['websocket', 'polling'],\r\n        });\r\n        setSocket(newSocket);\r\n        console.log('Socket.io client connected');\r\n\r\n        return () => newSocket.close();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!socket) return;\r\n\r\n        const username = localStorage.getItem('username');\r\n        if (username) {\r\n            socket.emit('userOnline', username);\r\n            console.log(`Emitted userOnline for: ${username}`);\r\n        }\r\n\r\n        socket.on('connect', () => {\r\n            console.log('Connected to Socket.io server');\r\n            if (username) {\r\n                socket.emit('userOnline', username);\r\n            }\r\n        });\r\n\r\n        socket.on('disconnect', () => {\r\n            console.log('Disconnected from Socket.io server');\r\n        });\r\n\r\n        socket.on('updateUserStatus', (users) => {\r\n            setOnlineUsers(users);\r\n            console.log('Received updateUserStatus:', users);\r\n        });\r\n\r\n        socket.on('receiveTradeRequest', (data) => {\r\n            setTradeRequests((prev) => [...prev, data]);\r\n            console.log('Received trade request:', data);\r\n        });\r\n\r\n        socket.on('tradeAccepted', (data) => {\r\n            console.log('Trade accepted:', data);\r\n            // Optionally handle trade acceptance\r\n        });\r\n\r\n        return () => {\r\n            socket.off('updateUserStatus');\r\n            socket.off('receiveTradeRequest');\r\n            socket.off('tradeAccepted');\r\n        };\r\n    }, [socket]);\r\n\r\n    const value = {\r\n        socket,\r\n        onlineUsers,\r\n        tradeRequests,\r\n        setTradeRequests,\r\n    };\r\n\r\n    return <SocketContext.Provider value={value}>{children}</SocketContext.Provider>;\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,aAAa,gBAAGP,aAAa,CAAC,CAAC;AAErC,OAAO,MAAMQ,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,OAAOR,UAAU,CAACM,aAAa,CAAC;AACpC,CAAC;AAACE,EAAA,CAFWD,SAAS;AAItB,OAAO,MAAME,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACZ,MAAMiB,SAAS,GAAGf,EAAE,CAAC,uBAAuB,EAAE;MAC1CgB,UAAU,EAAE,CAAC,WAAW,EAAE,SAAS;IACvC,CAAC,CAAC;IACFN,SAAS,CAACK,SAAS,CAAC;IACpBE,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAEzC,OAAO,MAAMH,SAAS,CAACI,KAAK,CAAC,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAENrB,SAAS,CAAC,MAAM;IACZ,IAAI,CAACW,MAAM,EAAE;IAEb,MAAMW,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACjD,IAAIF,QAAQ,EAAE;MACVX,MAAM,CAACc,IAAI,CAAC,YAAY,EAAEH,QAAQ,CAAC;MACnCH,OAAO,CAACC,GAAG,CAAC,2BAA2BE,QAAQ,EAAE,CAAC;IACtD;IAEAX,MAAM,CAACe,EAAE,CAAC,SAAS,EAAE,MAAM;MACvBP,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC5C,IAAIE,QAAQ,EAAE;QACVX,MAAM,CAACc,IAAI,CAAC,YAAY,EAAEH,QAAQ,CAAC;MACvC;IACJ,CAAC,CAAC;IAEFX,MAAM,CAACe,EAAE,CAAC,YAAY,EAAE,MAAM;MAC1BP,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;IACrD,CAAC,CAAC;IAEFT,MAAM,CAACe,EAAE,CAAC,kBAAkB,EAAGC,KAAK,IAAK;MACrCb,cAAc,CAACa,KAAK,CAAC;MACrBR,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEO,KAAK,CAAC;IACpD,CAAC,CAAC;IAEFhB,MAAM,CAACe,EAAE,CAAC,qBAAqB,EAAGE,IAAI,IAAK;MACvCZ,gBAAgB,CAAEa,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,IAAI,CAAC,CAAC;MAC3CT,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEQ,IAAI,CAAC;IAChD,CAAC,CAAC;IAEFjB,MAAM,CAACe,EAAE,CAAC,eAAe,EAAGE,IAAI,IAAK;MACjCT,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEQ,IAAI,CAAC;MACpC;IACJ,CAAC,CAAC;IAEF,OAAO,MAAM;MACTjB,MAAM,CAACmB,GAAG,CAAC,kBAAkB,CAAC;MAC9BnB,MAAM,CAACmB,GAAG,CAAC,qBAAqB,CAAC;MACjCnB,MAAM,CAACmB,GAAG,CAAC,eAAe,CAAC;IAC/B,CAAC;EACL,CAAC,EAAE,CAACnB,MAAM,CAAC,CAAC;EAEZ,MAAMoB,KAAK,GAAG;IACVpB,MAAM;IACNE,WAAW;IACXE,aAAa;IACbC;EACJ,CAAC;EAED,oBAAOZ,OAAA,CAACC,aAAa,CAAC2B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAtB,QAAA,EAAEA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAyB,CAAC;AACpF,CAAC;AAAC1B,GAAA,CAjEWF,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}